<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.guilin.mapper.SysUserMapper">
  <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO `sys_user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">`id`,</if>
      <if test="username != null">`username`,</if>
      <if test="password != null">`password`,</if>
      <if test="avatar != null">`avatar`,</if>
      <if test="sex != null">`sex`,</if>
      <if test="phone != null">`phone`,</if>
      <if test="email != null">`email`,</if>
      <if test="state != null">`state`,</if>
      <if test="remark != null">`remark`,</if>
      <if test="createTime != null">`create_time`,</if>
      <if test="deptId != null">`dept_id`,</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">#{id},</if>
      <if test="username != null">#{username},</if>
      <if test="password != null">#{password},</if>
      <if test="avatar != null">#{avatar},</if>
      <if test="sex != null">#{sex},</if>
      <if test="phone != null">#{phone},</if>
      <if test="email != null">#{email},</if>
      <if test="state != null">#{state},</if>
      <if test="remark != null">#{remark},</if>
      <if test="createTime != null">#{createTime},</if>
      <if test="deptId != null">#{deptId},</if>
    </trim>
  </insert>
  <delete id="deleteByPrimaryKey">
    DELETE FROM `sys_user`
    WHERE `id` = #{id}
  </delete>
  <update id="updateByPrimaryKey">
    UPDATE `sys_user`
    <set>
      <if test="id != null">`id` = #{id},</if>
      <if test="username != null">`username` = #{username},</if>
      <if test="password != null">`password` = #{password},</if>
      <if test="avatar != null">`avatar` = #{avatar},</if>
      <if test="sex != null">`sex` = #{sex},</if>
      <if test="phone != null">`phone` = #{phone},</if>
      <if test="email != null">`email` = #{email},</if>
      <if test="state != null">`state` = #{state},</if>
      <if test="remark != null">`remark` = #{remark},</if>
      <if test="createTime != null">`create_time` = #{createTime},</if>
      <if test="deptId != null">`dept_id` = #{deptId},</if>
    </set>
    WHERE `id` = #{id}
  </update>
  <select id="selectByPrimaryKey" resultType="com.github.guilin.domain.entity.SysUser">
    SELECT `id`,`username`,`password`,`avatar`,`sex`,`phone`,`email`,`state`,`remark`,`create_time`,`dept_id`
    FROM `sys_user`
    WHERE `id` = #{id}
  </select>
  <select id="selectList" resultType="com.github.guilin.domain.entity.SysUser">
    SELECT `id`,`username`,`password`,`avatar`,`sex`,`phone`,`email`,`state`,`remark`,`create_time`,`dept_id`
    FROM `sys_user`
    <where>
      <if test="id != null">AND `id` = #{id}</if>
      <if test="deptId != null">AND `dept_id` = #{deptId}</if>
      <if test="sex != null">AND `sex` = #{sex}</if>
      <if test="state != null">AND `state` = #{state}</if>
      <if test="username != null">AND `username` LIKE CONCAT('%',#{username},'%')</if>
      <if test="password != null">AND `password` LIKE CONCAT('%',#{password},'%')</if>
      <if test="avatar != null">AND `avatar` LIKE CONCAT('%',#{avatar},'%')</if>
      <if test="phone != null">AND `phone` LIKE CONCAT('%',#{phone},'%')</if>
      <if test="email != null">AND `email` LIKE CONCAT('%',#{email},'%')</if>
      <if test="remark != null">AND `remark` LIKE CONCAT('%',#{remark},'%')</if>
    </where>
  </select>
  <select id="selectByUsername" resultType="com.github.guilin.domain.entity.SysUser">
    SELECT `id`,`username`,`password`,`avatar`,`sex`,`phone`,`email`,`state`,`remark`,`create_time`,`dept_id`
    FROM `sys_user`
    WHERE `username` = #{username}
  </select>
  <select id="selectByDeptIds" resultType="com.github.guilin.domain.entity.SysUser">
    SELECT `id`,`username`,`password`,`avatar`,`sex`,`phone`,`email`,`state`,`remark`,`create_time`,`dept_id`
    FROM `sys_user`
    WHERE `dept_id` IN
    <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </select>
  <select id="getRoleByUid" resultType="com.github.guilin.domain.entity.SysUser">
    SELECT sr.`id`,sr.`name`,sr.`order_num`,sr.`create_time`
    FROM `sys_user_role` sur
           LEFT JOIN `sys_role` sr ON sur.`rid` = sr.`id`
    WHERE sur.`uid` = #{uid}
  </select>

    <!-- sys_user_role -->
  <delete id="deleteSysUserRoleByUid">
    DELETE FROM `sys_user_role`
    WHERE `uid` = #{uid}
  </delete>
  <insert id="insertSysUserRole">
    INSERT INTO `sys_user_role` (`uid`, `rid`) VALUES
    <foreach collection="rids" item="item" index="index" separator=",">
      (#{uid}, #{item})
    </foreach>
  </insert>
</mapper>
